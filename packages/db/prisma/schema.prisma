generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  password      String
  name          String
  photo         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?  

  rooms         Room[]
  chats         Chat[]
  shapes        Shape[]
  participants  RoomParticipant[]
}

model Room {
  id            Int        @id @default(autoincrement())
  slug          String     @unique
  adminId       String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?  

  admin         User       @relation(fields: [adminId], references: [id])
  chats         Chat[]
  shapes        Shape[]
  participants  RoomParticipant[]
}

model RoomParticipant {
  id          Int        @id @default(autoincrement())
  roomId      Int
  userId      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?  

  room        Room       @relation(fields: [roomId], references: [id])
  user        User       @relation(fields: [userId], references: [id])

  @@unique([roomId, userId])
}

model Chat {
  id          Int        @id @default(autoincrement())
  roomId      Int
  userId      String
  message     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?  

  room        Room       @relation(fields: [roomId], references: [id])
  user        User       @relation(fields: [userId], references: [id])

  @@index([roomId])
}

model Shape {
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  id           Int       @id @default(autoincrement())
  roomId       Int
  userId       String


  startX       Int?
  startY       Int?
  width        Int?
  height       Int?


  type         ShapeType
  points       Json?

 
  strokeWidth  Int?
  strokeColor  String?
  strokeStyle  String?
  fillColor    String?
  fillStyle    String?
  fontSize     Int?
  text         String?

  room         Room      @relation(fields: [roomId], references: [id])
  user         User      @relation(fields: [userId], references: [id])

  @@index([roomId])
  @@index([userId])
}

enum ShapeType {
  RECTANGLE
  CIRCLE
  LINE
  DIAMOND
  ARROW
  TEXT
}